{"version":3,"file":"base-transform-walker.js","sourceRoot":"","sources":["../../../../src/aot-clean-transformer/transform-walker/base-transform-walker.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\n\nexport class WalkerContext {\n}\n\nexport class BaseTransformWalker<T extends WalkerContext = WalkerContext> {\n  public readonly walkerContext: T;\n\n  constructor(public sourceFile: ts.SourceFile,\n              public context: ts.TransformationContext,\n              walkerContext?: WalkerContext) {\n\n    this.walkerContext = walkerContext || new WalkerContext() as any;\n  }\n\n  walk(): ts.Node {\n    if (this.sourceFile.isDeclarationFile) {\n      return this.sourceFile;\n    } else {\n      const visited = this.visitNode(this.sourceFile);\n      return visited;\n\n    }\n  }\n\n  protected visitClassDeclaration(node: ts.ClassDeclaration) {\n    return this.walkChildren(node);\n  }\n\n  protected visitConstructorDeclaration(node: ts.ConstructorDeclaration) {\n    return this.walkChildren(node);\n  }\n\n  protected visitParameterDeclaration(node: ts.ParameterDeclaration) {\n    return this.walkChildren(node);\n  }\n\n  protected visitPropertyDeclaration(node: ts.PropertyDeclaration) {\n    return this.walkChildren(node);\n  }\n\n  protected visitMethodDeclaration(node: ts.MethodDeclaration) {\n    return this.walkChildren(node);\n  }\n\n  protected visitSyntaxList(node: ts.SyntaxList) {\n    return this.walkChildren(node);\n  }\n\n  protected visitDecorator(node: ts.Decorator) {\n    return this.walkChildren(node);\n  }\n\n  protected visitNode(node: ts.Node): ts.Node {\n    this.onBeforeVisitNode(node);\n\n    const visited = this._visitNode(node);\n\n\n    this.onAfterVisitNode(node);\n\n    return visited;\n  }\n\n  protected filterNodes<T extends ts.Node>(nodes: ts.NodeArray<T>, test?: (node: T) => boolean): ts.NodeArray<T> | undefined {\n    return nodes\n      ? ts.createNodeArray(nodes.filter( n => test(n) ))\n      : ts.createNodeArray()\n    ;\n  }\n\n  protected visitNodes<T extends ts.Node>(nodes: ts.NodeArray<T>, test?: (node: T) => boolean): ts.NodeArray<T> | undefined {\n    if (!nodes || nodes.length === 0) {\n      return undefined;\n    } else {\n      const resultNodes = ts.visitNodes(nodes, (n) => this.visitNode(n), test);\n      if (!resultNodes || resultNodes.length === 0) {\n        return undefined;\n      } else {\n        return nodes;\n      }\n    }\n  }\n\n  protected walkChildren(node: ts.Node): ts.Node {\n    return ts.visitEachChild(node, (child) => this.visitNode(child), this.context);\n  }\n\n  protected onBeforeVisitNode(node: ts.Node): void { }\n  protected onAfterVisitNode(node: ts.Node): void { }\n\n  protected findAstNodes(node: ts.Node | null,\n                         kind: ts.SyntaxKind,\n                         recursive = false,\n                         max: number = Infinity): ts.Node[] {\n    if (max == 0) {\n      return [];\n    }\n    if (!node) {\n      node = this.sourceFile;\n    }\n\n    let arr: ts.Node[] = [];\n    if (node.kind === kind) {\n      // If we're not recursively looking for children, stop here.\n      if (!recursive) {\n        return [node];\n      }\n\n      arr.push(node);\n      max--;\n    }\n\n    if (max > 0) {\n      for (const child of node.getChildren(this.sourceFile)) {\n        this.findAstNodes(child, kind, recursive, max)\n          .forEach((node: ts.Node) => {\n            if (max > 0) {\n              arr.push(node);\n            }\n            max--;\n          });\n\n        if (max <= 0) {\n          break;\n        }\n      }\n    }\n    return arr;\n  }\n\n  findFirstAstNode(node: ts.Node | null, kind: ts.SyntaxKind): ts.Node | null {\n    return this.findAstNodes(node, kind, false, 1)[0] || null;\n  }\n\n  private _visitNode(node: ts.Node): ts.Node {\n    switch (node.kind) {\n\n      case ts.SyntaxKind.ClassDeclaration:\n        return this.visitClassDeclaration(node as ts.ClassDeclaration) as any;\n\n      case ts.SyntaxKind.Constructor:\n        return this.visitConstructorDeclaration(node as ts.ConstructorDeclaration) as any;\n\n      case ts.SyntaxKind.Parameter:\n        return this.visitParameterDeclaration(node as ts.ParameterDeclaration) as any;\n\n      case ts.SyntaxKind.PropertyDeclaration:\n        return this.visitPropertyDeclaration(node as ts.PropertyDeclaration) as any;\n\n      case ts.SyntaxKind.MethodDeclaration:\n        return this.visitMethodDeclaration(node as ts.MethodDeclaration) as any;\n\n      case ts.SyntaxKind.SyntaxList:\n        return this.visitSyntaxList(node as ts.SyntaxList) as any;\n\n      case ts.SyntaxKind.Decorator:\n        return this.visitDecorator(node as ts.Decorator) as any;\n\n      default:\n        return this.walkChildren(node);\n    }\n  }\n}\n"]}