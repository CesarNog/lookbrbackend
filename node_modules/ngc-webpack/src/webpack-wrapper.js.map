{"version":3,"file":"webpack-wrapper.js","sourceRoot":"","sources":["../../src/webpack-wrapper.ts"],"names":[],"mappings":"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","sourcesContent":["import * as webpack from 'webpack';\nimport * as Path from 'path';\nimport { UserError } from '@angular/compiler-cli';\n\nimport { NgcWebpackPlugin } from './plugin';\n\n\n/**\n * Resolve the config to an object.\n * If it's a fn, invoke.\n *\n * Also check if it's a mocked ES6 Module in cases where TS file is used that uses \"export default\"\n * @param config\n * @returns {any}\n */\nfunction resolveConfig(config: any): any {\n  if (typeof config === 'function') {\n    return config();\n  } else if (config.__esModule === true && !!config.default) {\n    return resolveConfig(config.default);\n  } else {\n    return config;\n  }\n}\n\nexport function findPlugin(compiler: any): NgcWebpackPlugin {\n  return compiler.options.plugins\n    .filter( p => p instanceof NgcWebpackPlugin)[0];\n}\n\nexport interface ExternalAssetsSource {\n  externalAssets: any;\n}\n\nexport class WebpackWrapper {\n  public plugin: NgcWebpackPlugin;\n  public aotResources: any = {}; //TODO: use Map if in node 5\n\n  private hasPlugin: boolean;\n  private _externalAssetsSource: ExternalAssetsSource;\n\n  private constructor(public compiler: any) {\n    this.plugin = findPlugin(compiler);\n\n    this.hasPlugin = !!this.plugin;\n  };\n\n  get externalAssetsSource(): ExternalAssetsSource {\n    return this._externalAssetsSource;\n  }\n\n  set externalAssetsSource(value: ExternalAssetsSource) {\n    this._externalAssetsSource = value;\n  }\n\n  emitOnCompilationSuccess(): void {\n    if (this.hasPlugin && typeof this.plugin.options.onCompilationSuccess === 'function') {\n      this.plugin.options.onCompilationSuccess.call(this);\n    }\n  }\n\n  emitOnCompilationError(err: Error): void {\n    if (this.hasPlugin && typeof this.plugin.options.onCompilationError === 'function') {\n      this.plugin.options.onCompilationError.call(this, err);\n    }\n  }\n\n  resourcePathTransformer(path: string): string {\n    this.aotResources[Path.normalize(path)] = true;\n\n    const fn = this.plugin && (this.plugin.options.resourcePathTransformer || this.plugin.options.pathTransformer);\n\n    if (typeof fn === 'function') {\n      return fn(path);\n    } else {\n      return path;\n    }\n  }\n\n  resourceTransformer(path: string, source: string): string | Promise<string> {\n    const fn = this.plugin && (this.plugin.options.resourceTransformer || this.plugin.options.sourceTransformer);\n    if (typeof fn === 'function') {\n      return fn(path, source);\n    } else {\n      return source;\n    }\n  }\n\n  readFileTransformer(path: string, source: string): string {\n    if (this.plugin && typeof this.plugin.options.readFileTransformer === 'function') {\n      return this.plugin.options.readFileTransformer(path, source);\n    } else {\n      return source;\n    }\n  }\n\n  static fromConfig(webpackConfig: string | any): WebpackWrapper {\n    try {\n      let config: any;\n\n      if (!webpackConfig) {\n        webpackConfig = './webpack.config.js';\n      }\n\n      if (typeof webpackConfig === 'string') {\n        let configPath = Path.isAbsolute(webpackConfig)\n            ? webpackConfig\n            : Path.join(process.cwd(), webpackConfig)\n          ;\n\n        config = require(configPath);\n      } else {\n        config = webpackConfig;\n      }\n\n      const configModule = resolveConfig(config);\n      const compiler = webpack(configModule);\n\n      // setting the plugin is not mandatory so we check if it exists.\n      // if does it creates the wrapper, otherwise we need to create it.\n      const plugin = findPlugin(compiler);\n      return plugin ? plugin.webpackWrapper : WebpackWrapper.fromCompiler(compiler);\n    } catch (err) {\n      throw new UserError(`Invalid webpack configuration. Please set a valid --webpack argument.\\n${err.message}`);\n    }\n  }\n\n  static fromCompiler(compiler: any): WebpackWrapper {\n    return new WebpackWrapper(compiler);\n  }\n}"]}