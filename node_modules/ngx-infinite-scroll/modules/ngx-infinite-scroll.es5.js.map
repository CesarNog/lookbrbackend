{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/axis-resolver.ts","../../src/services/scroll-resolver.ts","../../src/services/scroll-register.ts","../../src/services/position-resolver.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {InfiniteScrollModule} from './public_api';\n\nexport {InfiniteScrollDirective as ɵa} from './src/modules/infinite-scroll.directive';\nexport {PositionResolver as ɵb} from './src/services/position-resolver';\nexport {ScrollRegister as ɵc} from './src/services/scroll-register';\nexport {ScrollResolver as ɵd} from './src/services/scroll-resolver';","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport { InfiniteScrollModule } from './src/modules/ngx-infinite-scroll.module';\n\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { PositionResolver } from '../services/position-resolver';\nimport { ScrollRegister } from '../services/scroll-register';\nimport { ScrollResolver } from '../services/scroll-resolver';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: [\n    PositionResolver,\n    ScrollRegister,\n    ScrollResolver\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollEvent, IScrollStats, IPositionStats, IResolver } from '../models';\nimport {\n  Directive, ElementRef, Input, Output,\n  EventEmitter, OnDestroy, OnInit,\n  SimpleChanges, NgZone\n} from '@angular/core';\nimport { PositionResolver } from '../services/position-resolver';\nimport { ScrollRegister, IScrollRegisterConfig } from '../services/scroll-register';\nimport { ScrollResolver } from '../services/scroll-resolver';\nimport { AxisResolver } from '../services/axis-resolver';\n\nimport { Subscription } from 'rxjs/Subscription';\nexport class InfiniteScrollDirective implements OnDestroy, OnInit {\n   scrolled = new EventEmitter<InfiniteScrollEvent>();\n   scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n   infiniteScrollDistance: number = 2;\n   infiniteScrollUpDistance: number = 1.5;\n   infiniteScrollThrottle: number = 300;\n   infiniteScrollDisabled: boolean = false;\n   infiniteScrollContainer: any = null;\n   scrollWindow: boolean = true;\n   immediateCheck: boolean = false;\n   horizontal: boolean = false;\n   alwaysCallback: boolean = false;\nprivate disposeScroller: Subscription;\n/**\n * @param {?} element\n * @param {?} zone\n * @param {?} positionResolver\n * @param {?} scrollRegister\n * @param {?} scrollerResolver\n */\nconstructor(\nprivate element: ElementRef,\nprivate zone: NgZone,\nprivate positionResolver: PositionResolver,\nprivate scrollRegister: ScrollRegister,\nprivate scrollerResolver: ScrollResolver\n  ) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.zone.runOutsideAngular(() => {\n        const /** @type {?} */ containerElement = this.resolveContainerElement();\n        const /** @type {?} */ resolver = this.positionResolver.create({\n          axis: new AxisResolver(!this.horizontal),\n          windowElement: containerElement,\n        });\n        const /** @type {?} */ options: IScrollRegisterConfig = {\n          container: resolver.container,\n          filterBefore: () => !this.infiniteScrollDisabled,\n          mergeMap: () => this.positionResolver.calculatePoints(this.element, resolver),\n          scrollHandler: (container: IPositionStats) => this.handleOnScroll(container),\n          throttleDuration: this.infiniteScrollThrottle\n        };\n        this.disposeScroller = this.scrollRegister.attachEvent(options);\n      });\n    }\n  }\n/**\n * @param {?} container\n * @return {?}\n */\nhandleOnScroll(container: IPositionStats) {\n    const /** @type {?} */ distance = {\n      down: this.infiniteScrollDistance,\n      up: this.infiniteScrollUpDistance\n    };\n    const /** @type {?} */ scrollStats: IScrollStats = this.scrollerResolver.getScrollStats(container, { distance });\n    if (this.shouldTriggerEvents(scrollStats.shouldScroll)) {\n      const /** @type {?} */ infiniteScrollEvent: InfiniteScrollEvent = {\n        currentScrollPosition: container.scrolledUntilNow\n      };\n      if (scrollStats.isScrollingDown) {\n        this.onScrollDown(infiniteScrollEvent);\n      } else {\n        this.onScrollUp(infiniteScrollEvent);\n      }\n    }\n  }\n/**\n * @param {?} shouldScroll\n * @return {?}\n */\nshouldTriggerEvents(shouldScroll: boolean) {\n    return (this.alwaysCallback || shouldScroll) && !this.infiniteScrollDisabled;\n  }\n/**\n * @return {?}\n */\nngOnDestroy () {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nonScrollDown(data: InfiniteScrollEvent = { currentScrollPosition: 0 }) {\n    this.zone.run(() => this.scrolled.emit(data));\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nonScrollUp(data: InfiniteScrollEvent = { currentScrollPosition: 0 }) {\n    this.zone.run(() => this.scrolledUp.emit(data));\n  }\n/**\n * @return {?}\n */\nprivate resolveContainerElement(): any {\n    const /** @type {?} */ selector = this.infiniteScrollContainer;\n    const /** @type {?} */ hasWindow = window && window.hasOwnProperty('document');\n    const /** @type {?} */ containerIsString = selector && hasWindow && typeof(this.infiniteScrollContainer) === 'string';\n    let /** @type {?} */ container = containerIsString\n      ? window.document.querySelector(selector)\n      : selector;\n    if (!selector) {\n      container = this.scrollWindow ? window : this.element;\n    }\n    return container;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: PositionResolver, },\n{type: ScrollRegister, },\n{type: ScrollResolver, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'scrolled': [{ type: Output },],\n'scrolledUp': [{ type: Output },],\n'infiniteScrollDistance': [{ type: Input },],\n'infiniteScrollUpDistance': [{ type: Input },],\n'infiniteScrollThrottle': [{ type: Input },],\n'infiniteScrollDisabled': [{ type: Input },],\n'infiniteScrollContainer': [{ type: Input },],\n'scrollWindow': [{ type: Input },],\n'immediateCheck': [{ type: Input },],\n'horizontal': [{ type: Input },],\n'alwaysCallback': [{ type: Input },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolledUp;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollUpDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollThrottle;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDisabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollContainer;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollWindow;\n/** @type {?} */\nInfiniteScrollDirective.prototype.immediateCheck;\n/** @type {?} */\nInfiniteScrollDirective.prototype.horizontal;\n/** @type {?} */\nInfiniteScrollDirective.prototype.alwaysCallback;\n/** @type {?} */\nInfiniteScrollDirective.prototype.disposeScroller;\n/** @type {?} */\nInfiniteScrollDirective.prototype.element;\n/** @type {?} */\nInfiniteScrollDirective.prototype.zone;\n/** @type {?} */\nInfiniteScrollDirective.prototype.positionResolver;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollRegister;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollerResolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class AxisResolver {\n/**\n * @param {?=} vertical\n */\nconstructor(private vertical: boolean = true) {\n  }\n/**\n * @return {?}\n */\nclientHeightKey() { return this.vertical ? 'clientHeight' : 'clientWidth'; }\n/**\n * @return {?}\n */\noffsetHeightKey() { return this.vertical ? 'offsetHeight' : 'offsetWidth'; }\n/**\n * @return {?}\n */\nscrollHeightKey() { return this.vertical ? 'scrollHeight' : 'scrollWidth'; }\n/**\n * @return {?}\n */\npageYOffsetKey() { return this.vertical ? 'pageYOffset' : 'pageXOffset'; }\n/**\n * @return {?}\n */\noffsetTopKey() { return this.vertical ? 'offsetTop' : 'offsetLeft'; }\n/**\n * @return {?}\n */\nscrollTopKey() { return this.vertical ? 'scrollTop' : 'scrollLeft'; }\n/**\n * @return {?}\n */\ntopKey() { return this.vertical ? 'top' : 'left'; }\n}\n\nfunction AxisResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisResolver.prototype.vertical;\n}\n\n","import { IPositionStats, IScrollerConfig } from '../models';\nimport { Injectable } from '@angular/core';\nexport class ScrollResolver {\npublic lastScrollPosition: number = 0;\n/**\n * @param {?} container\n * @param {?} config\n * @param {?} scrollingDown\n * @return {?}\n */\nshouldScroll (container: IPositionStats, config: IScrollerConfig, scrollingDown: boolean) {\n    const /** @type {?} */ distance = config.distance;\n    let /** @type {?} */ remaining: number;\n    let /** @type {?} */ containerBreakpoint: number;\n    if (scrollingDown) {\n      remaining = container.totalToScroll - container.scrolledUntilNow;\n      containerBreakpoint = container.height * distance.down + 1;\n    } else {\n      remaining = container.scrolledUntilNow;\n      containerBreakpoint = container.height * distance.up + 1;\n    }\n    const /** @type {?} */ shouldScroll: boolean = remaining <= containerBreakpoint;\n    this.lastScrollPosition = container.scrolledUntilNow;\n    return shouldScroll;\n  }\n/**\n * @param {?} container\n * @return {?}\n */\nisScrollingDown (container: IPositionStats) {\n    return this.lastScrollPosition < container.scrolledUntilNow;\n  }\n/**\n * @param {?} container\n * @param {?} config\n * @return {?}\n */\ngetScrollStats (container: IPositionStats, config: IScrollerConfig) {\n    const /** @type {?} */ isScrollingDown = this.isScrollingDown(container);\n    const /** @type {?} */ shouldScroll = this.shouldScroll(container, config, isScrollingDown);\n    return { isScrollingDown, shouldScroll };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollResolver.ctorParameters;\n/** @type {?} */\nScrollResolver.prototype.lastScrollPosition;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ContainerRef, IPositionStats, IScrollStats } from '../models';\nimport { Injectable, ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/sampleTime';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/mergeMap';\n\nexport interface IScrollRegisterConfig {\n  container: ContainerRef;\n  throttleDuration: number;\n  filterBefore: () => boolean;\n  mergeMap: Function;\n  scrollHandler: (value: any) => void;\n}\nexport class ScrollRegister {\n/**\n * @param {?} options\n * @return {?}\n */\nattachEvent (options: IScrollRegisterConfig): Subscription {\n    const /** @type {?} */ scroller$: Subscription = Observable.fromEvent(options.container, 'scroll')\n      .sampleTime(options.throttleDuration)\n      .filter(options.filterBefore)\n      .mergeMap((ev: any) => Observable.of(options.mergeMap(ev)))\n      .subscribe(options.scrollHandler);\n    return scroller$;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollRegister_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollRegister.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollRegister.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { AxisResolver } from './axis-resolver';\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nexport class PositionResolver {\n/**\n * @param {?} options\n * @return {?}\n */\ncreate(options: IPositionElements): IResolver {\n    const /** @type {?} */ isWindow = this.isElementWindow(options.windowElement);\n    const /** @type {?} */ resolver: IResolver = {\n      axis: options.axis,\n      container: this.defineContainer(options.windowElement, isWindow),\n      isWindow,\n    };\n    return resolver;\n  }\n/**\n * @param {?} windowElement\n * @param {?} isContainerWindow\n * @return {?}\n */\ndefineContainer(windowElement: ContainerRef, isContainerWindow: boolean) {\n    const /** @type {?} */ container = (isContainerWindow || !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n    return container;\n  }\n/**\n * @param {?} windowElement\n * @return {?}\n */\nisElementWindow(windowElement: ContainerRef): boolean {\n    const /** @type {?} */ isWindow = Object.prototype.toString.call(windowElement).includes('Window');\n    return isWindow;\n  }\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\ngetDocumentElement(isContainerWindow: boolean, windowElement) {\n    return isContainerWindow\n      ? windowElement.document.documentElement\n      : null;\n  }\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\ncalculatePoints (element: ElementRef, resolver: IResolver) {\n    return resolver.isWindow\n      ? this.calculatePointsForWindow(element, resolver)\n      : this.calculatePointsForElement(element, resolver);\n  }\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\ncalculatePointsForWindow (element: ElementRef, resolver: IResolver): IPositionStats {\n    const { axis, container, isWindow } = resolver;\n    const /** @type {?} */ offsetHeightKey = axis.offsetHeightKey();\n    const /** @type {?} */ clientHeightKey = axis.clientHeightKey();\n    const /** @type {?} */ topKey = axis.topKey();\n    // container's height\n    const /** @type {?} */ height = this.height(container, isWindow, offsetHeightKey, clientHeightKey);\n    // scrolled until now / current y point\n    const /** @type {?} */ scrolledUntilNow = height + this.pageYOffset(this.getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    const /** @type {?} */ nativeElementHeight = this.height(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    const /** @type {?} */ totalToScroll = this.offsetTop(element.nativeElement, axis, isWindow) + nativeElementHeight;\n    return { height, scrolledUntilNow, totalToScroll };\n  }\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\ncalculatePointsForElement (element: ElementRef, resolver: IResolver) {\n    const { axis, container, isWindow } = resolver;\n    const /** @type {?} */ offsetHeightKey = axis.offsetHeightKey();\n    const /** @type {?} */ clientHeightKey = axis.clientHeightKey();\n    const /** @type {?} */ scrollTop = axis.scrollTopKey();\n    const /** @type {?} */ scrollHeight = axis.scrollHeightKey();\n    const /** @type {?} */ topKey = axis.topKey();\n\n    const /** @type {?} */ height = this.height(container, isWindow, offsetHeightKey, clientHeightKey);\n    // perhaps use this.container.offsetTop instead of 'scrollTop'\n    const /** @type {?} */ scrolledUntilNow = container[scrollTop];\n    let /** @type {?} */ containerTopOffset = 0;\n    const /** @type {?} */ offsetTop = this.offsetTop(container, axis, isWindow);\n    if (offsetTop !== void 0) {\n      containerTopOffset = offsetTop;\n    }\n    const /** @type {?} */ totalToScroll = container[scrollHeight];\n    return { height, scrolledUntilNow, totalToScroll };\n  }\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nprivate height (elem: any, isWindow: boolean, offsetHeightKey: string, clientHeightKey: string) {\n    if (isNaN(elem[offsetHeightKey])) {\n      return this.getDocumentElement(isWindow, elem)[clientHeightKey];\n    } else {\n      return elem[offsetHeightKey];\n    }\n  }\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nprivate offsetTop (elem: ContainerRef, axis: AxisResolver, isWindow: boolean) {\n    const /** @type {?} */ topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) { // || elem.css('none')) {\n      return;\n    }\n    return elem.getBoundingClientRect()[topKey] + this.pageYOffset(elem, axis, isWindow);\n  }\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nprivate pageYOffset (elem: ContainerRef, axis: AxisResolver, isWindow: boolean) {\n    const /** @type {?} */ pageYOffset = axis.pageYOffsetKey();\n    const /** @type {?} */ scrollTop = axis.scrollTopKey();\n    const /** @type {?} */ offsetTop = axis.offsetTopKey();\n\n    if (isNaN(window[pageYOffset])) {\n      return this.getDocumentElement(isWindow, elem)[scrollTop];\n    } else if (elem.ownerDocument) {\n      return elem.ownerDocument.defaultView[pageYOffset];\n    } else {\n      return elem[offsetTop];\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PositionResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nPositionResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPositionResolver.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}